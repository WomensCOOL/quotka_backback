{"version":3,"sources":["components/BoardPlayground/Section/Board/BoardTextarea.js","components/BoardPlayground/Section/Board/BoardInput.js","components/BoardPlayground/Section/Board/SourceTag.js","components/BoardPlayground/BoardView.js","components/BoardPlayground/Section/List/BoardListText.js","components/BoardPlayground/Section/List/WriteButton.js","components/table/CommonTable.js","components/table/CommonTableColumn.js","components/table/CommonTableRow.js","components/BoardPlayground/BoardList.jsx","pages/BoardListPlayground.js","pages/BoardPlayground.js"],"names":["BoardTextarea","name","placeholder","value","onChange","className","BoardInput","delimiters","withRouter","React","useState","id","text","tags","setTags","ReactTags","handleDelete","i","filter","tag","index","handleAddition","handleDrag","currPos","newPos","newTags","slice","splice","handleTagClick","console","log","inputFieldPosition","autocomplete","history","dispatch","useDispatch","userFrom","localStorage","getItem","writerFrom","totalPage","setTotalpage","currentPage","setCurrentPage","Content","setContent","boardWriter","boardTitle","boardContent","inputs","setInput","useEffect","FetchBoard","listBoard","page","then","response","payload","success","boards","Math","ceil","count","alert","e","target","onRemove","_id","onSubmit","preventDefault","length","variables","uploadBoard","style","textDecoration","color","to","BoardBox","BoardWriteForm","BoardButton","type","onClick","CancelButton","Alert","map","board","Fragment","AddBoard","user","time","createdAt","writer","title","content","PageNumber","Pagination","parseInt","textContent","shape","size","hidePrevButton","hideNextButton","styled","div","p","form","button","BoardText","BoardListTextBox","BoardWriteButton","Button","WriteButton","CommonTable","props","headersName","children","item","CommonTableColumn","CommonTableRow","BoardTopBlock","ul","BoardList","data","setData","Axios","get","Object","values","author","createAt","GetData","BoardListText","BoardTable","table","match","exact","path","component","BoardView","BoardDetail"],"mappings":"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","file":"static/js/7.26425e5e.chunk.js","sourcesContent":["import React from 'react';\nimport 'styles/board/board.css';\n\nconst BoardTextarea = function ({ name, placeholder, value, onChange }) {\n  return (\n    <>\n      <textarea\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        className=\"boardTextArea\"\n      />\n    </>\n  );\n};\n\nexport default BoardTextarea;\n","import React from 'react';\nimport 'styles/board/board.css';\n\nconst BoardInput = function ({ name, placeholder, value, onChange }) {\n  return (\n    <input\n      name={name}\n      placeholder={placeholder}\n      onChange={onChange}\n      value={value}\n      className=\"boardInput\"\n    />\n  );\n};\n\nexport default BoardInput;\n","import React, { useState } from 'react';\nimport { render } from 'react-dom';\nimport 'styles/board/SourceTag.css';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport { withRouter } from 'react-router-dom';\n\nconst KeyCodes = {\n  comma: 188,\n  enter: 13,\n};\n\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\n\nconst SourceTag = () => {\n  const [tags, setTags] = React.useState([{ id: 'movie', text: '영화' }]);\n\n  const handleDelete = i => {\n    setTags(tags.filter((tag, index) => index !== i));\n  };\n\n  const handleAddition = tag => {\n    setTags([...tags, tag]);\n  };\n\n  const handleDrag = (tag, currPos, newPos) => {\n    const newTags = tags.slice();\n\n    newTags.splice(currPos, 1);\n    newTags.splice(newPos, 0, tag);\n\n    // re-render\n    setTags(newTags);\n  };\n\n  const handleTagClick = index => {\n    console.log('The tag at index ' + index + ' was clicked');\n  };\n\n  return (\n    <div className=\"app\">\n      <h1> 출처 </h1>\n      <div>\n        <ReactTags\n          tags={tags}\n          delimiters={delimiters}\n          handleDelete={handleDelete}\n          handleAddition={handleAddition}\n          handleDrag={handleDrag}\n          handleTagClick={handleTagClick}\n          inputFieldPosition=\"top\"\n          placeholder=\"출처를 입력하세요.\"\n          autocomplete\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(SourceTag);\n","import React, { useEffect, useState } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport AddBoard from './Section/Board/AddBoard';\nimport BoardTextarea from './Section/Board/BoardTextarea';\nimport BoardInput from './Section/Board/BoardInput';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { useDispatch } from 'react-redux';\nimport { uploadBoard, listBoard } from 'modules/actions/board';\nimport styled from 'styled-components';\nimport Tag from 'components/BoardPlayground/Section/Board/Tag';\nimport SourceTag from 'components/BoardPlayground/Section/Board/SourceTag';\nimport TitleBoxContainer from 'components/BoardPlayground/Section/Board/BoardTitle';\nimport BoardList from 'pages/BoardListPlayground';\n\nfunction BoardView({ history }) {\n  const dispatch = useDispatch();\n  const userFrom = localStorage.getItem('userId');\n  const writerFrom = localStorage.getItem('userName');\n\n  const [totalPage, setTotalpage] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [Content, setContent] = useState([]);\n  const [boardWriter, setBoardWriter] = useState(writerFrom);\n  const [inputs, setInput] = useState({\n    boardTitle: '',\n    boardContent: '',\n  });\n  const { boardTitle, boardContent } = inputs;\n\n  useEffect(() => {\n    FetchBoard();\n  }, [currentPage]);\n\n  const FetchBoard = () => {\n    dispatch(listBoard({ page: currentPage })).then(response => {\n      if (response.payload.success) {\n        setContent(response.payload.boards);\n        setTotalpage(Math.ceil(response.payload.count / 10));\n      } else {\n        alert('게시글을 불러올 수 없습니다.');\n      }\n    });\n  };\n\n  const onChange = e => {\n    const { value, name } = e.target;\n    setInput({\n      ...inputs,\n      [name]: value,\n    });\n  };\n\n  const handlePageChange = e => {\n    const currentPage = parseInt(e.target.textContent);\n    setCurrentPage(currentPage);\n  };\n\n  const onRemove = id => {\n    setContent(Content.filter(Content => Content._id !== id));\n    FetchBoard();\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (!boardTitle) {\n      alert('제목을 작성해주세요.');\n      return;\n    } else if (!boardContent) {\n      alert('내용을 작성해주세요.');\n      return;\n    } else if (boardContent.length > 300) {\n      alert('내용을 300자 이내로 작성해주세요.');\n      return;\n    }\n\n    let variables = {\n      userFrom: userFrom,\n      boardTitle: boardTitle,\n      boardContent: boardContent,\n      boardWriter: boardWriter,\n    };\n    dispatch(uploadBoard(variables)).then(response => {\n      if (response.payload.success) {\n        setInput({\n          boardTitle: '',\n          boardContent: '',\n        });\n        FetchBoard();\n      } else {\n        alert('게시글 업로드에 실패했습니다.');\n      }\n    });\n  };\n\n  return (\n    <>\n      <Link\n        style={{ textDecoration: 'none', color: 'black' }}\n        to=\"/playground/boardlist\"\n      >\n        <TitleBoxContainer></TitleBoxContainer>\n      </Link>\n      <BoardBox>\n        <BoardWriteForm onSubmit={onSubmit}>\n          <ul>\n            <li>\n              <BoardInput\n                name=\"boardTitle\"\n                placeholder=\"제목을 작성해주세요.\"\n                value={boardTitle}\n                onChange={onChange}\n              />\n            </li>\n            <li>\n              <BoardTextarea\n                name=\"boardContent\"\n                placeholder=\"내용을 작성해주세요.\"\n                value={boardContent}\n                onChange={onChange}\n              />\n            </li>\n            <li>\n              <SourceTag></SourceTag>\n            </li>\n            <li>\n              <Link to=\"/playground/board/quotkaId\">\n                <BoardButton type=\"submit\" onClick={onSubmit}>\n                  작성\n                </BoardButton>\n              </Link>\n              <CancelButton type=\"submit\" onClick={onSubmit}>\n                취소\n              </CancelButton>\n            </li>\n            <li>\n              <Alert>게시글 수정 및 삭제는 마이페이지에서 가능합니다.</Alert>\n            </li>\n          </ul>\n        </BoardWriteForm>\n        {Content &&\n          Content.map((board, index) => {\n            return (\n              <React.Fragment key={index}>\n                <AddBoard\n                  id={board._id}\n                  user={board.userFrom}\n                  time={board.createdAt}\n                  writer={board.boardWriter}\n                  title={board.boardTitle}\n                  content={board.boardContent}\n                  history={`${history}`}\n                  onRemove={onRemove}\n                />\n              </React.Fragment>\n            );\n          })}\n        <PageNumber>\n          <Pagination\n            count={totalPage}\n            page={currentPage}\n            onChange={handlePageChange}\n            shape=\"rounded\"\n            size=\"small\"\n            hidePrevButton\n            hideNextButton\n          />\n        </PageNumber>\n      </BoardBox>\n    </>\n  );\n}\n\nexport default withRouter(BoardView);\n\nconst BoardBox = styled.div`\n  width: 750px;\n  margin: 0 auto;\n  height: 100%;\n`;\n\nconst Alert = styled.p`\n  display: flex;\n  justify-content: center;\n  padding-bottom: 30px;\n  color: #de506b;\n  font-size: 13px;\n  padding: 4px 0px;\n`;\n\nconst BoardWriteForm = styled.form`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst BoardButton = styled.button`\n  border-radius: 8px;\n  width: 100px;\n  height: 30px;\n  text-align: center;\n  margin-right: 10px;\n  margin-top: 10px;\n  font-family: 'SCDream5M';\n  cursor: pointer;\n  padding-right: 1rem;\n  padding-left: 1rem;\n  border: none;\n  background: #c5ad81;\n  color: white;\n  &:hover {\n    background: rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst CancelButton = styled.button`\n  border-radius: 8px;\n  width: 100px;\n  height: 30px;\n  text-align: center;\n  margin-top: 10px;\n  font-family: 'SCDream5M';\n  cursor: pointer;\n  padding-right: 1rem;\n  padding-left: 1rem;\n  border: none;\n  background: gray;\n  color: white;\n  &:hover {\n    background: rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst PageNumber = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 50px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst BoardText = styled.div`\n  width: 430px;\n  padding-top: 0rem;\n  font-family: 'SCDream4R';\n  font-size: 13px;\n  font-weight: normal;\n  margin-left: -3px;\n  margin-bottom: 20px;\n`;\n\nconst BoardListTextBox = ({}) => {\n  return (\n    <BoardText>\n      <p>\n        쿼트마스터는 여러분들이 따뜻한 명언, 이야기를 공유하는 게시판입니다.\n        Write a Post 버튼을 통해 여러분들의 이야기를 공유해주세요 !\n      </p>\n    </BoardText>\n  );\n};\n\nexport default BoardListTextBox;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Button from 'components/common/Button';\nimport { withRouter, Link } from 'react-router-dom';\n\nconst BoardWriteButton = styled(Button)`\n  border-radius: 8px;\n  width: 130px;\n  height: 35px;\n  text-align: center;\n  margin-right: 10px;\n  font-family: 'SCDream4R';\n  font-weight: light;\n  cursor: pointer;\n  padding-right: 1px;\n  padding-left: 1px;\n  border: none;\n  background: #c5ad81;\n  color: white;\n  &:hover {\n    background: rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst WriteButton = () => {\n  return (\n    <Link\n      style={{ textDecoration: 'none', color: 'black' }}\n      to=\"/playground/board\"\n    >\n      <BoardWriteButton>Write a Post</BoardWriteButton>\n    </Link>\n  );\n};\n\nexport default WriteButton;\n","import React from 'react';\nimport './CommonTable.css';\n\nconst CommonTable = props => {\n  const { headersName, children } = props;\n\n  return (\n    <table className=\"common-table\">\n      <thead>\n        <tr>\n          {headersName.map((item, index) => {\n            return (\n              <td className=\"common-table-header-column\" key={index}>\n                {item}\n              </td>\n            );\n          })}\n        </tr>\n      </thead>\n      <tbody>{children}</tbody>\n    </table>\n  );\n};\n\nexport default CommonTable;\n","import React from 'react';\n\nconst CommonTableColumn = ({ children }) => {\n  return <td className=\"common-table-column\">{children}</td>;\n};\n\nexport default CommonTableColumn;\n","import React from 'react';\n\nconst CommonTableRow = ({ children }) => {\n  return <td className=\"common-table-column\">{children}</td>;\n};\n\nexport default CommonTableRow;\n","import React, { useEffect, useState } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport TitleBoxContainer from 'components/BoardPlayground/Section/Board/BoardTitle';\nimport { Link } from 'react-router-dom';\nimport BoardListTextBox from './Section/List/BoardListText';\nimport styled from 'styled-components';\nimport WriteButton from './Section/List/WriteButton';\nimport Axios from 'axios';\nimport CommonTable from 'components/table/CommonTable';\nimport CommonTableColumn from 'components/table/CommonTableColumn';\nimport CommonTableRow from 'components/table/CommonTableRow';\n\n/**\n * BoardList class\n */\n\nconst BoardTopBlock = styled.ul`\n  overflow: hidden;\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 2px;\n  margin-bottom: 0px;\n  margin-top: 0px;\n`;\n\nfunction GetData() {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    Axios.get('/playGround').then(response => {\n      setData(response.data);\n    });\n  }, []);\n\n  const item = Object.values(data).map(item => (\n    <CommonTableRow key={item.id}>\n      <CommonTableColumn>{item.id}</CommonTableColumn>\n      <CommonTableColumn>{item.title}</CommonTableColumn>\n      <CommonTableColumn>{item.author}</CommonTableColumn>\n      <CommonTableColumn>{item.createAt}</CommonTableColumn>\n      <CommonTableColumn>{item.count}</CommonTableColumn>\n    </CommonTableRow>\n  ));\n\n  return item;\n}\n\nfunction BoardList() {\n  const item = GetData();\n  return (\n    <>\n      <TitleBoxContainer></TitleBoxContainer>\n      <BoardTopBlock>\n        <BoardListTextBox></BoardListTextBox>\n        <WriteButton></WriteButton>\n      </BoardTopBlock>\n      <BoardTable>\n        <CommonTable\n          headersName={['번호', '제목', '작성자', '등록일', '조회수']}\n        >\n          {item}\n        </CommonTable>\n      </BoardTable>\n    </>\n  );\n}\n\nexport default BoardList;\n\nconst BoardTable = styled.table`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-collapse: separate;\n  border-spacing: 0 10px;\n\n  .num {\n    width: 5%;\n    text-align: center;\n  }\n  .date {\n    width: 7%;\n  }\n  .title {\n    width: 25%;\n    text-align: center;\n  }\n  .content {\n    width: 63%;\n  }\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n    font-size: 14px;\n    border-top: 1px solid #444444;\n    margin-top: 7px;\n  }\n\n  td {\n    text-aligh: left;\n    padding: 10px;\n    border-bottom: 1px solid #444444;\n    margin-left: 10px;\n  }\n  th {\n    padding: 15px;\n    border-bottom: 1px solid #444444;\n    margin-left: 10px;\n  }\n\n  thead {\n    font-family: 'SCDream-bold';\n    font-weight: 100;\n  }\n`;\n","import React from 'react';\nimport { Route, withRouter } from 'react-router';\nimport BoardView from 'components/BoardPlayground/BoardView';\nimport BoardDetail from 'components/BoardPlayground/BoardDetail';\nimport BoardList from 'components/BoardPlayground/BoardList';\n\nfunction Board({ match }) {\n  return (\n    <>\n      <Route exact path={match.path} component={BoardList} />\n    </>\n  );\n}\n\nexport default withRouter(Board);\n","import React from 'react';\nimport { Route, withRouter } from 'react-router';\nimport BoardView from 'components/BoardPlayground/BoardView';\nimport BoardDetail from 'components/BoardPlayground/BoardDetail';\n\nfunction Board({ match }) {\n  return (\n    <>\n      <Route exact path={match.path} component={BoardView} />\n      <Route exact path={`${match.path}/:boardId`} component={BoardDetail} />\n    </>\n  );\n}\n\nexport default withRouter(Board);\n"],"sourceRoot":""}